# -*- coding: utf-8 -*-
"""CV_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WRURQ_eXGZcE0-u760hv8fqY6krx1rYn
"""

import cv2
import numpy as np

img = cv2.imread("/content/images.jpeg")

from google.colab.patches import cv2_imshow # Import cv2_imshow for displaying images in Colab

img = cv2.imread("/content/images.jpeg")

cv2_imshow(img)
# cv2.waitKey(0)  # This is typically not needed in Colab when using cv2_imshow

# Resizing image
img_resize = cv2.resize(img, (300, 300))
# Use cv2_imshow instead of cv2.imshow to display images in Colab
cv2_imshow(img_resize)
# cv2.waitKey(0)  # This is typically not needed in Colab when using cv2_imshow

# Cropping Image
img_crop = img[100:300, 200:500]
cv2_imshow(img_crop)
cv2.waitKey(0)

_, thresholded_img = cv2.threshold(cv2.cvtColor(img, cv2.COLOR_BGR2GRAY), 125, 255,
cv2.THRESH_BINARY)
cv2_imshow(thresholded_img)
cv2.waitKey(0)

# Contour analysis
contours, _ = cv2.findContours(thresholded_img, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
contour_img = img.copy()
cv2.drawContours(contour_img, contours, -1, (0, 255, 0), 2)
cv2_imshow(contour_img)
cv2.waitKey(0)

# Blob detection (SimpleBlobDetector)
detector = cv2.SimpleBlobDetector_create()
keypoints = detector.detect(img)
blob_img = img.copy()
cv2.drawKeypoints(blob_img, keypoints, np.array([]), (0, 0, 255),
cv2.DRAW_MATCHES_FLAGS_DRAW_RICH_KEYPOINTS)
cv2_imshow(blob_img)
cv2.waitKey(0)

# Release resources
cv2.destroyAllWindows()